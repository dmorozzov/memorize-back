buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.franzbecker:gradle-lombok:1.11")
        classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repo.spring.io/milestone/"
        }
    }
}

group 'com.dmore'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'com.moowork.node'

node {
    version = '5.8.0'
    npmVersion = '3.8.0'
    download = true
}

jar {
    baseName = 'memorize-back'
    version = '0.0.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "http://repo.spring.io/milestone/"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.2'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'


    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web-services:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-logging:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-security:$springBootVersion"

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase()
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

//clean.delete << file('node_modules')
clean.delete << file('src/main/resources/static/dist')